name: Deal Sniper Bot
on:
  schedule:
    - cron: '*/30 * * * *'  # Run every 30 minutes
  workflow_dispatch:        # Allow manual runs

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 15     # Prevent hanging runs
    
    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3
      
    # Step 2: Set up Python
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        
    # Step 3: Cache dependencies for faster runs
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    # Step 4: Install Python dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    # Step 5: Install Playwright and browser
    - name: Install Playwright
      run: |
        pip install playwright
        playwright install chromium
        playwright install-deps chromium  # Install system dependencies
        
    # Step 6: Cache Ollama models between runs
    - name: Cache Ollama models
      uses: actions/cache@v3
      with:
        path: ~/.ollama
        key: ${{ runner.os }}-ollama-models
        restore-keys: |
          ${{ runner.os }}-ollama-
          
    # Step 7: Install Ollama and AI model
    - name: Install Ollama and AI model
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh
        # Wait for Ollama to start
        sleep 5
        # Pull the smaller, faster model
        ollama pull mistral:7b
        # Verify model is working
        ollama list
        
    # Step 8: Initialize database
    - name: Initialize database
      run: |
        python -c "
        import database
        print('Database initialized successfully')
        "
        
    # Step 9: Run the deal sniper
    - name: Run Deal Sniper Bot
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        echo "ðŸš€ Starting Deal Sniper Bot..."
        python main.py
        echo "âœ… Bot run completed!"
        
    # Step 10: Upload database as artifact (optional)
    - name: Upload database artifact
      if: always()  # Run even if previous steps fail
      uses: actions/upload-artifact@v3
      with:
        name: listings-database
        path: listings.db
